"""Add Terms of Service fields and SiteSetting model

Revision ID: 2bc0b4104f39
Revises: 14f3bd6bc585
Create Date: 2025-10-04 23:45:53.424955

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '2bc0b4104f39'
down_revision = '14f3bd6bc585'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Create site_setting table if it doesn't exist
    conn = op.get_bind()
    inspector = sa.inspect(conn)
    if 'site_setting' not in inspector.get_table_names():
        op.create_table('site_setting',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('key', sa.String(length=100), nullable=False),
        sa.Column('value', sa.Text(), nullable=True),
        sa.Column('updated_at', sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('key')
        )

    # Add columns to user table if they don't exist
    existing_columns = [col['name'] for col in inspector.get_columns('user')]
    with op.batch_alter_table('user', schema=None) as batch_op:
        if 'accepted_terms' not in existing_columns:
            # Add accepted_terms with server_default for SQLite compatibility
            batch_op.add_column(sa.Column('accepted_terms', sa.Boolean(), nullable=False, server_default='0'))
        if 'terms_accepted_at' not in existing_columns:
            batch_op.add_column(sa.Column('terms_accepted_at', sa.DateTime(), nullable=True))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_column('terms_accepted_at')
        batch_op.drop_column('accepted_terms')

    op.drop_table('site_setting')
    # ### end Alembic commands ###
